'''
Задача №112305. 
Удаление дубликатов
Напишите программу, которая выполняет "сжатие массива" – заполняет все копии уже ранее встречавшихся элементов нулями 
и переставляет все нулевые элементы в конец массива. 
При этом все оставшиеся элементы располагаются в начале массива в том же порядке, что и в исходном массиве.

Входные данные
Первая строка содержит размер массива N. 
Во второй строке через пробел задаются N чисел – элементы массива. 
Гарантируется, что 0 < N ≤ 10000 .

Выходные данные
Программа должна вывести в одну строчку все элементы получившегося массива, разделив их пробелами.

Примеры
входные данные
6
0 1 2 1 2 3
выходные данные
1 2 3 0 0 0
'''

# Вводим элементы, в задаче элементы вводятся строкой, для этого используем input, 
# делим строку по пробелам, получаем список в формате str
numbers = input().split(' ')
# Чтобы перевести строку в число, используем цикл
for i in range(len(numbers)):
# Так как изменять элементы внутри списка нужно обращаясь по индексу к этому элементу,
# запускаем цикл for по индексам списка numbers
    numbers[i] = int(numbers[i]) # обращаемся к этому элементу и говорим что он равен этому же элементу, но уже в типе данных int

numbers_dup = list(set(numbers)) # избавляемся от повторов, переводим список во множество

# по условию задачи все нулю в конце, поэтому условием проверяем
if 0 in numbers_dup: # если 0 есть
    numbers_dup.remove(0) # то удаляем его
    numbers_dup.append(0) # и добавляем в конце

# вычисляем разницу по длине между изначальным списком numbers и измененным списком numbers_dup
while len(numbers_dup) < len(numbers):
    numbers_dup.append(0) # добавляем в измененный список нули, до тех пор пока он по длине не будет равен изначальному списку

print(*numbers_dup)


# # аптимизированное решение

# numbers = list(map(int, input().split(' ')))

# numbers_dup = list(set(numbers))

# if 0 in numbers_dup:
#     numbers_dup.remove(0)

# for i in range(len(numbers) - len(numbers_dup)):
#     numbers_dup.append(0)

# print(*numbers_dup)